name: Push image
on:
  workflow_call:
    inputs:
      workload-identity-provider:
        description: Full identifier of the GitHub workload identity pool provider in Google Cloud
        type: string
        required: true
      service-account:
        description: Email of the Google Cloud service account for pushing the image
        type: string
        required: true
      image-repository:
        description: The GCP Artifact Registry repository to use
        type: string
        required: true
      image-name:
        description: The name of the image
        type: string
        required: true
      dockerfile:
        description: The path to the relevant Dockerfile
        type: string
        required: false
        default: Dockerfile
      build-path:
        description: The build path to use
        type: string
        required: false
        default: .
      gcp-region:
        description: The GCP region to use
        type: string
        required: true

jobs:
  push-image:
    name: Push image
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Authenticate to Google Cloud Platform
        uses: google-github-actions/auth@v2
        id: gcp
        with:
          workload_identity_provider: ${{ inputs.workload-identity-provider }}
          service_account: ${{ inputs.publisher-service-account }}

      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Build and push image
        env:
          name: ${{ inputs.image-name }}:${{ github.sha }}
          registry: ${{ inputs.gcp-region }}-docker.pkg.dev
          registry_path: ${{ steps.gcp.outputs.project_id }}/${{ inputs.image-repository }}
        id: image
        run: |-
          gcloud auth configure-docker --quiet marketplace.gcr.io
          gcloud auth configure-docker --quiet "${registry}"
          image_url="${registry}/${registry_path}/${name}"
          echo "image_url=${image_url}" >> $GITHUB_OUTPUT
          docker build --tag "${image_url}" --file "${{ inputs.dockerfile }}" \
            "${{ inputs.build-path }}"
          docker push "${image_url}"
